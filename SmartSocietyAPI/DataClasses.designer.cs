#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartSocietyAPI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbSociety")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblAccount(tblAccount instance);
    partial void UpdatetblAccount(tblAccount instance);
    partial void DeletetblAccount(tblAccount instance);
    partial void InserttblPayment(tblPayment instance);
    partial void UpdatetblPayment(tblPayment instance);
    partial void DeletetblPayment(tblPayment instance);
    partial void InserttblAdminLogin(tblAdminLogin instance);
    partial void UpdatetblAdminLogin(tblAdminLogin instance);
    partial void DeletetblAdminLogin(tblAdminLogin instance);
    partial void InserttblAlbum(tblAlbum instance);
    partial void UpdatetblAlbum(tblAlbum instance);
    partial void DeletetblAlbum(tblAlbum instance);
    partial void InserttblAMC(tblAMC instance);
    partial void UpdatetblAMC(tblAMC instance);
    partial void DeletetblAMC(tblAMC instance);
    partial void InserttblAMCService(tblAMCService instance);
    partial void UpdatetblAMCService(tblAMCService instance);
    partial void DeletetblAMCService(tblAMCService instance);
    partial void InserttblAsset(tblAsset instance);
    partial void UpdatetblAsset(tblAsset instance);
    partial void DeletetblAsset(tblAsset instance);
    partial void InserttblAssetType(tblAssetType instance);
    partial void UpdatetblAssetType(tblAssetType instance);
    partial void DeletetblAssetType(tblAssetType instance);
    partial void InserttblBooking(tblBooking instance);
    partial void UpdatetblBooking(tblBooking instance);
    partial void DeletetblBooking(tblBooking instance);
    partial void InserttblComplaint(tblComplaint instance);
    partial void UpdatetblComplaint(tblComplaint instance);
    partial void DeletetblComplaint(tblComplaint instance);
    partial void InserttblDocumentType(tblDocumentType instance);
    partial void UpdatetblDocumentType(tblDocumentType instance);
    partial void DeletetblDocumentType(tblDocumentType instance);
    partial void InserttblEvent(tblEvent instance);
    partial void UpdatetblEvent(tblEvent instance);
    partial void DeletetblEvent(tblEvent instance);
    partial void InserttblEventType(tblEventType instance);
    partial void UpdatetblEventType(tblEventType instance);
    partial void DeletetblEventType(tblEventType instance);
    partial void InserttblExpense(tblExpense instance);
    partial void UpdatetblExpense(tblExpense instance);
    partial void DeletetblExpense(tblExpense instance);
    partial void InserttblFacility(tblFacility instance);
    partial void UpdatetblFacility(tblFacility instance);
    partial void DeletetblFacility(tblFacility instance);
    partial void InserttblFlat(tblFlat instance);
    partial void UpdatetblFlat(tblFlat instance);
    partial void DeletetblFlat(tblFlat instance);
    partial void InserttblFlatHolder(tblFlatHolder instance);
    partial void UpdatetblFlatHolder(tblFlatHolder instance);
    partial void DeletetblFlatHolder(tblFlatHolder instance);
    partial void InserttblImage(tblImage instance);
    partial void UpdatetblImage(tblImage instance);
    partial void DeletetblImage(tblImage instance);
    partial void InserttblIncome(tblIncome instance);
    partial void UpdatetblIncome(tblIncome instance);
    partial void DeletetblIncome(tblIncome instance);
    partial void InserttblLogin(tblLogin instance);
    partial void UpdatetblLogin(tblLogin instance);
    partial void DeletetblLogin(tblLogin instance);
    partial void InserttblMaintenance(tblMaintenance instance);
    partial void UpdatetblMaintenance(tblMaintenance instance);
    partial void DeletetblMaintenance(tblMaintenance instance);
    partial void InserttblNotice(tblNotice instance);
    partial void UpdatetblNotice(tblNotice instance);
    partial void DeletetblNotice(tblNotice instance);
    partial void InserttblNoticeTemplate(tblNoticeTemplate instance);
    partial void UpdatetblNoticeTemplate(tblNoticeTemplate instance);
    partial void DeletetblNoticeTemplate(tblNoticeTemplate instance);
    partial void InserttblOwnerDocument(tblOwnerDocument instance);
    partial void UpdatetblOwnerDocument(tblOwnerDocument instance);
    partial void DeletetblOwnerDocument(tblOwnerDocument instance);
    partial void InserttblPollOption(tblPollOption instance);
    partial void UpdatetblPollOption(tblPollOption instance);
    partial void DeletetblPollOption(tblPollOption instance);
    partial void InserttblPoll(tblPoll instance);
    partial void UpdatetblPoll(tblPoll instance);
    partial void DeletetblPoll(tblPoll instance);
    partial void InserttblPollVoting(tblPollVoting instance);
    partial void UpdatetblPollVoting(tblPollVoting instance);
    partial void DeletetblPollVoting(tblPollVoting instance);
    partial void InserttblPosition(tblPosition instance);
    partial void UpdatetblPosition(tblPosition instance);
    partial void DeletetblPosition(tblPosition instance);
    partial void InserttblRent(tblRent instance);
    partial void UpdatetblRent(tblRent instance);
    partial void DeletetblRent(tblRent instance);
    partial void InserttblResident(tblResident instance);
    partial void UpdatetblResident(tblResident instance);
    partial void DeletetblResident(tblResident instance);
    partial void InserttblSociety(tblSociety instance);
    partial void UpdatetblSociety(tblSociety instance);
    partial void DeletetblSociety(tblSociety instance);
    partial void InserttblStaffMember(tblStaffMember instance);
    partial void UpdatetblStaffMember(tblStaffMember instance);
    partial void DeletetblStaffMember(tblStaffMember instance);
    partial void InserttblTransaction(tblTransaction instance);
    partial void UpdatetblTransaction(tblTransaction instance);
    partial void DeletetblTransaction(tblTransaction instance);
    partial void InserttblVendor(tblVendor instance);
    partial void UpdatetblVendor(tblVendor instance);
    partial void DeletetblVendor(tblVendor instance);
    partial void InserttblVisitor(tblVisitor instance);
    partial void UpdatetblVisitor(tblVisitor instance);
    partial void DeletetblVisitor(tblVisitor instance);
    partial void InserttblNotification(tblNotification instance);
    partial void UpdatetblNotification(tblNotification instance);
    partial void DeletetblNotification(tblNotification instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbSocietyConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblAccount> tblAccounts
		{
			get
			{
				return this.GetTable<tblAccount>();
			}
		}
		
		public System.Data.Linq.Table<tblPayment> tblPayments
		{
			get
			{
				return this.GetTable<tblPayment>();
			}
		}
		
		public System.Data.Linq.Table<tblAdminLogin> tblAdminLogins
		{
			get
			{
				return this.GetTable<tblAdminLogin>();
			}
		}
		
		public System.Data.Linq.Table<tblAlbum> tblAlbums
		{
			get
			{
				return this.GetTable<tblAlbum>();
			}
		}
		
		public System.Data.Linq.Table<tblAMC> tblAMCs
		{
			get
			{
				return this.GetTable<tblAMC>();
			}
		}
		
		public System.Data.Linq.Table<tblAMCService> tblAMCServices
		{
			get
			{
				return this.GetTable<tblAMCService>();
			}
		}
		
		public System.Data.Linq.Table<tblAsset> tblAssets
		{
			get
			{
				return this.GetTable<tblAsset>();
			}
		}
		
		public System.Data.Linq.Table<tblAssetType> tblAssetTypes
		{
			get
			{
				return this.GetTable<tblAssetType>();
			}
		}
		
		public System.Data.Linq.Table<tblBooking> tblBookings
		{
			get
			{
				return this.GetTable<tblBooking>();
			}
		}
		
		public System.Data.Linq.Table<tblComplaint> tblComplaints
		{
			get
			{
				return this.GetTable<tblComplaint>();
			}
		}
		
		public System.Data.Linq.Table<tblDocumentType> tblDocumentTypes
		{
			get
			{
				return this.GetTable<tblDocumentType>();
			}
		}
		
		public System.Data.Linq.Table<tblEvent> tblEvents
		{
			get
			{
				return this.GetTable<tblEvent>();
			}
		}
		
		public System.Data.Linq.Table<tblEventType> tblEventTypes
		{
			get
			{
				return this.GetTable<tblEventType>();
			}
		}
		
		public System.Data.Linq.Table<tblExpense> tblExpenses
		{
			get
			{
				return this.GetTable<tblExpense>();
			}
		}
		
		public System.Data.Linq.Table<tblFacility> tblFacilities
		{
			get
			{
				return this.GetTable<tblFacility>();
			}
		}
		
		public System.Data.Linq.Table<tblFlat> tblFlats
		{
			get
			{
				return this.GetTable<tblFlat>();
			}
		}
		
		public System.Data.Linq.Table<tblFlatHolder> tblFlatHolders
		{
			get
			{
				return this.GetTable<tblFlatHolder>();
			}
		}
		
		public System.Data.Linq.Table<tblImage> tblImages
		{
			get
			{
				return this.GetTable<tblImage>();
			}
		}
		
		public System.Data.Linq.Table<tblIncome> tblIncomes
		{
			get
			{
				return this.GetTable<tblIncome>();
			}
		}
		
		public System.Data.Linq.Table<tblLogin> tblLogins
		{
			get
			{
				return this.GetTable<tblLogin>();
			}
		}
		
		public System.Data.Linq.Table<tblMaintenance> tblMaintenances
		{
			get
			{
				return this.GetTable<tblMaintenance>();
			}
		}
		
		public System.Data.Linq.Table<tblNotice> tblNotices
		{
			get
			{
				return this.GetTable<tblNotice>();
			}
		}
		
		public System.Data.Linq.Table<tblNoticeTemplate> tblNoticeTemplates
		{
			get
			{
				return this.GetTable<tblNoticeTemplate>();
			}
		}
		
		public System.Data.Linq.Table<tblOwnerDocument> tblOwnerDocuments
		{
			get
			{
				return this.GetTable<tblOwnerDocument>();
			}
		}
		
		public System.Data.Linq.Table<tblPollOption> tblPollOptions
		{
			get
			{
				return this.GetTable<tblPollOption>();
			}
		}
		
		public System.Data.Linq.Table<tblPoll> tblPolls
		{
			get
			{
				return this.GetTable<tblPoll>();
			}
		}
		
		public System.Data.Linq.Table<tblPollVoting> tblPollVotings
		{
			get
			{
				return this.GetTable<tblPollVoting>();
			}
		}
		
		public System.Data.Linq.Table<tblPosition> tblPositions
		{
			get
			{
				return this.GetTable<tblPosition>();
			}
		}
		
		public System.Data.Linq.Table<tblRent> tblRents
		{
			get
			{
				return this.GetTable<tblRent>();
			}
		}
		
		public System.Data.Linq.Table<tblResident> tblResidents
		{
			get
			{
				return this.GetTable<tblResident>();
			}
		}
		
		public System.Data.Linq.Table<tblSociety> tblSocieties
		{
			get
			{
				return this.GetTable<tblSociety>();
			}
		}
		
		public System.Data.Linq.Table<tblStaffMember> tblStaffMembers
		{
			get
			{
				return this.GetTable<tblStaffMember>();
			}
		}
		
		public System.Data.Linq.Table<tblTransaction> tblTransactions
		{
			get
			{
				return this.GetTable<tblTransaction>();
			}
		}
		
		public System.Data.Linq.Table<tblVendor> tblVendors
		{
			get
			{
				return this.GetTable<tblVendor>();
			}
		}
		
		public System.Data.Linq.Table<tblVisitor> tblVisitors
		{
			get
			{
				return this.GetTable<tblVisitor>();
			}
		}
		
		public System.Data.Linq.Table<tblNotification> tblNotifications
		{
			get
			{
				return this.GetTable<tblNotification>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAccounts")]
	public partial class tblAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private string _FlatNo;
		
		private decimal _Balance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnBalanceChanging(decimal value);
    partial void OnBalanceChanged();
    #endregion
		
		public tblAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,0) NOT NULL")]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ritesroq.tblPayments")]
	public partial class tblPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentID;
		
		private string _PaymentName;
		
		private int _PaymentFor;
		
		private System.DateTime _DueDate;
		
		private decimal _Amount;
		
		private System.DateTime _InitiateDate;
		
		private bool _IsActive;
		
		private decimal _Penalty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentIDChanging(int value);
    partial void OnPaymentIDChanged();
    partial void OnPaymentNameChanging(string value);
    partial void OnPaymentNameChanged();
    partial void OnPaymentForChanging(int value);
    partial void OnPaymentForChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnInitiateDateChanging(System.DateTime value);
    partial void OnInitiateDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnPenaltyChanging(decimal value);
    partial void OnPenaltyChanged();
    #endregion
		
		public tblPayment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PaymentName
		{
			get
			{
				return this._PaymentName;
			}
			set
			{
				if ((this._PaymentName != value))
				{
					this.OnPaymentNameChanging(value);
					this.SendPropertyChanging();
					this._PaymentName = value;
					this.SendPropertyChanged("PaymentName");
					this.OnPaymentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFor", DbType="Int NOT NULL")]
		public int PaymentFor
		{
			get
			{
				return this._PaymentFor;
			}
			set
			{
				if ((this._PaymentFor != value))
				{
					this.OnPaymentForChanging(value);
					this.SendPropertyChanging();
					this._PaymentFor = value;
					this.SendPropertyChanged("PaymentFor");
					this.OnPaymentForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiateDate", DbType="DateTime NOT NULL")]
		public System.DateTime InitiateDate
		{
			get
			{
				return this._InitiateDate;
			}
			set
			{
				if ((this._InitiateDate != value))
				{
					this.OnInitiateDateChanging(value);
					this.SendPropertyChanging();
					this._InitiateDate = value;
					this.SendPropertyChanged("InitiateDate");
					this.OnInitiateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Penalty", DbType="Decimal(18,0) NOT NULL")]
		public decimal Penalty
		{
			get
			{
				return this._Penalty;
			}
			set
			{
				if ((this._Penalty != value))
				{
					this.OnPenaltyChanging(value);
					this.SendPropertyChanging();
					this._Penalty = value;
					this.SendPropertyChanged("Penalty");
					this.OnPenaltyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAdminLogin")]
	public partial class tblAdminLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AdminLoginName;
		
		private int _ResidentID;
		
		private string _Email;
		
		private string _Password;
		
		private bool _IsBlocked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminLoginNameChanging(string value);
    partial void OnAdminLoginNameChanged();
    partial void OnResidentIDChanging(int value);
    partial void OnResidentIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsBlockedChanging(bool value);
    partial void OnIsBlockedChanged();
    #endregion
		
		public tblAdminLogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminLoginName", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AdminLoginName
		{
			get
			{
				return this._AdminLoginName;
			}
			set
			{
				if ((this._AdminLoginName != value))
				{
					this.OnAdminLoginNameChanging(value);
					this.SendPropertyChanging();
					this._AdminLoginName = value;
					this.SendPropertyChanged("AdminLoginName");
					this.OnAdminLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentID", DbType="Int NOT NULL")]
		public int ResidentID
		{
			get
			{
				return this._ResidentID;
			}
			set
			{
				if ((this._ResidentID != value))
				{
					this.OnResidentIDChanging(value);
					this.SendPropertyChanging();
					this._ResidentID = value;
					this.SendPropertyChanged("ResidentID");
					this.OnResidentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlocked", DbType="Bit NOT NULL")]
		public bool IsBlocked
		{
			get
			{
				return this._IsBlocked;
			}
			set
			{
				if ((this._IsBlocked != value))
				{
					this.OnIsBlockedChanging(value);
					this.SendPropertyChanging();
					this._IsBlocked = value;
					this.SendPropertyChanged("IsBlocked");
					this.OnIsBlockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAlbums")]
	public partial class tblAlbum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlbumID;
		
		private string _AlbumName;
		
		private string _Description;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedOn;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnAlbumNameChanging(string value);
    partial void OnAlbumNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblAlbum()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AlbumName
		{
			get
			{
				return this._AlbumName;
			}
			set
			{
				if ((this._AlbumName != value))
				{
					this.OnAlbumNameChanging(value);
					this.SendPropertyChanging();
					this._AlbumName = value;
					this.SendPropertyChanged("AlbumName");
					this.OnAlbumNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAMC")]
	public partial class tblAMC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AMCID;
		
		private string _AMCName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _VendorName;
		
		private string _VendorContactNo;
		
		private string _VendorAddress;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAMCIDChanging(int value);
    partial void OnAMCIDChanged();
    partial void OnAMCNameChanging(string value);
    partial void OnAMCNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnVendorContactNoChanging(string value);
    partial void OnVendorContactNoChanged();
    partial void OnVendorAddressChanging(string value);
    partial void OnVendorAddressChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblAMC()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AMCID
		{
			get
			{
				return this._AMCID;
			}
			set
			{
				if ((this._AMCID != value))
				{
					this.OnAMCIDChanging(value);
					this.SendPropertyChanging();
					this._AMCID = value;
					this.SendPropertyChanged("AMCID");
					this.OnAMCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMCName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AMCName
		{
			get
			{
				return this._AMCName;
			}
			set
			{
				if ((this._AMCName != value))
				{
					this.OnAMCNameChanging(value);
					this.SendPropertyChanging();
					this._AMCName = value;
					this.SendPropertyChanged("AMCName");
					this.OnAMCNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorContactNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string VendorContactNo
		{
			get
			{
				return this._VendorContactNo;
			}
			set
			{
				if ((this._VendorContactNo != value))
				{
					this.OnVendorContactNoChanging(value);
					this.SendPropertyChanging();
					this._VendorContactNo = value;
					this.SendPropertyChanged("VendorContactNo");
					this.OnVendorContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorAddress", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string VendorAddress
		{
			get
			{
				return this._VendorAddress;
			}
			set
			{
				if ((this._VendorAddress != value))
				{
					this.OnVendorAddressChanging(value);
					this.SendPropertyChanging();
					this._VendorAddress = value;
					this.SendPropertyChanged("VendorAddress");
					this.OnVendorAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAMCService")]
	public partial class tblAMCService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AMCServiceID;
		
		private int _AMCID;
		
		private string _Description;
		
		private System.DateTime _ServiceOn;
		
		private string _ServicemanName;
		
		private string _ServicemanContactNo;
		
		private int _CreatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAMCServiceIDChanging(int value);
    partial void OnAMCServiceIDChanged();
    partial void OnAMCIDChanging(int value);
    partial void OnAMCIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnServiceOnChanging(System.DateTime value);
    partial void OnServiceOnChanged();
    partial void OnServicemanNameChanging(string value);
    partial void OnServicemanNameChanged();
    partial void OnServicemanContactNoChanging(string value);
    partial void OnServicemanContactNoChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    #endregion
		
		public tblAMCService()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMCServiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AMCServiceID
		{
			get
			{
				return this._AMCServiceID;
			}
			set
			{
				if ((this._AMCServiceID != value))
				{
					this.OnAMCServiceIDChanging(value);
					this.SendPropertyChanging();
					this._AMCServiceID = value;
					this.SendPropertyChanged("AMCServiceID");
					this.OnAMCServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMCID", DbType="Int NOT NULL")]
		public int AMCID
		{
			get
			{
				return this._AMCID;
			}
			set
			{
				if ((this._AMCID != value))
				{
					this.OnAMCIDChanging(value);
					this.SendPropertyChanging();
					this._AMCID = value;
					this.SendPropertyChanged("AMCID");
					this.OnAMCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOn", DbType="DateTime NOT NULL")]
		public System.DateTime ServiceOn
		{
			get
			{
				return this._ServiceOn;
			}
			set
			{
				if ((this._ServiceOn != value))
				{
					this.OnServiceOnChanging(value);
					this.SendPropertyChanging();
					this._ServiceOn = value;
					this.SendPropertyChanged("ServiceOn");
					this.OnServiceOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicemanName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ServicemanName
		{
			get
			{
				return this._ServicemanName;
			}
			set
			{
				if ((this._ServicemanName != value))
				{
					this.OnServicemanNameChanging(value);
					this.SendPropertyChanging();
					this._ServicemanName = value;
					this.SendPropertyChanged("ServicemanName");
					this.OnServicemanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicemanContactNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ServicemanContactNo
		{
			get
			{
				return this._ServicemanContactNo;
			}
			set
			{
				if ((this._ServicemanContactNo != value))
				{
					this.OnServicemanContactNoChanging(value);
					this.SendPropertyChanging();
					this._ServicemanContactNo = value;
					this.SendPropertyChanged("ServicemanContactNo");
					this.OnServicemanContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAsset")]
	public partial class tblAsset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssetID;
		
		private string _AssetName;
		
		private int _AssetTypeID;
		
		private string _Description;
		
		private string _Image;
		
		private string _InvoiceDoc;
		
		private int _AssetValue;
		
		private System.Nullable<System.DateTime> _PurchasedOn;
		
		private string _Status;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssetIDChanging(int value);
    partial void OnAssetIDChanged();
    partial void OnAssetNameChanging(string value);
    partial void OnAssetNameChanged();
    partial void OnAssetTypeIDChanging(int value);
    partial void OnAssetTypeIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnInvoiceDocChanging(string value);
    partial void OnInvoiceDocChanged();
    partial void OnAssetValueChanging(int value);
    partial void OnAssetValueChanged();
    partial void OnPurchasedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchasedOnChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblAsset()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string AssetName
		{
			get
			{
				return this._AssetName;
			}
			set
			{
				if ((this._AssetName != value))
				{
					this.OnAssetNameChanging(value);
					this.SendPropertyChanging();
					this._AssetName = value;
					this.SendPropertyChanged("AssetName");
					this.OnAssetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTypeID", DbType="Int NOT NULL")]
		public int AssetTypeID
		{
			get
			{
				return this._AssetTypeID;
			}
			set
			{
				if ((this._AssetTypeID != value))
				{
					this.OnAssetTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AssetTypeID = value;
					this.SendPropertyChanged("AssetTypeID");
					this.OnAssetTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(255)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDoc", DbType="VarChar(255)")]
		public string InvoiceDoc
		{
			get
			{
				return this._InvoiceDoc;
			}
			set
			{
				if ((this._InvoiceDoc != value))
				{
					this.OnInvoiceDocChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDoc = value;
					this.SendPropertyChanged("InvoiceDoc");
					this.OnInvoiceDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetValue", DbType="Int NOT NULL")]
		public int AssetValue
		{
			get
			{
				return this._AssetValue;
			}
			set
			{
				if ((this._AssetValue != value))
				{
					this.OnAssetValueChanging(value);
					this.SendPropertyChanging();
					this._AssetValue = value;
					this.SendPropertyChanged("AssetValue");
					this.OnAssetValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasedOn", DbType="Date")]
		public System.Nullable<System.DateTime> PurchasedOn
		{
			get
			{
				return this._PurchasedOn;
			}
			set
			{
				if ((this._PurchasedOn != value))
				{
					this.OnPurchasedOnChanging(value);
					this.SendPropertyChanging();
					this._PurchasedOn = value;
					this.SendPropertyChanged("PurchasedOn");
					this.OnPurchasedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAssetType")]
	public partial class tblAssetType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssetTypeID;
		
		private string _AssetTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssetTypeIDChanging(int value);
    partial void OnAssetTypeIDChanged();
    partial void OnAssetTypeNameChanging(string value);
    partial void OnAssetTypeNameChanged();
    #endregion
		
		public tblAssetType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AssetTypeID
		{
			get
			{
				return this._AssetTypeID;
			}
			set
			{
				if ((this._AssetTypeID != value))
				{
					this.OnAssetTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AssetTypeID = value;
					this.SendPropertyChanged("AssetTypeID");
					this.OnAssetTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AssetTypeName
		{
			get
			{
				return this._AssetTypeName;
			}
			set
			{
				if ((this._AssetTypeName != value))
				{
					this.OnAssetTypeNameChanging(value);
					this.SendPropertyChanging();
					this._AssetTypeName = value;
					this.SendPropertyChanged("AssetTypeName");
					this.OnAssetTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBookings")]
	public partial class tblBooking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookingID;
		
		private int _FacilityID;
		
		private string _FlatNo;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Status;
		
		private string _Purpose;
		
		private string _Description;
		
		private bool _IsApproved;
		
		private System.Nullable<int> _ApprovedBy;
		
		private bool _IsActive;
		
		private string _Reason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookingIDChanging(int value);
    partial void OnBookingIDChanged();
    partial void OnFacilityIDChanging(int value);
    partial void OnFacilityIDChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public tblBooking()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookingID
		{
			get
			{
				return this._BookingID;
			}
			set
			{
				if ((this._BookingID != value))
				{
					this.OnBookingIDChanging(value);
					this.SendPropertyChanging();
					this._BookingID = value;
					this.SendPropertyChanged("BookingID");
					this.OnBookingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityID", DbType="Int NOT NULL")]
		public int FacilityID
		{
			get
			{
				return this._FacilityID;
			}
			set
			{
				if ((this._FacilityID != value))
				{
					this.OnFacilityIDChanging(value);
					this.SendPropertyChanging();
					this._FacilityID = value;
					this.SendPropertyChanged("FacilityID");
					this.OnFacilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblComplaints")]
	public partial class tblComplaint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ComplaintID;
		
		private string _FlatNo;
		
		private string _ComplaintType;
		
		private string _Subject;
		
		private string _Description;
		
		private System.Nullable<int> _Priority;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<int> _HandledBy;
		
		private string _Response;
		
		private System.Nullable<System.DateTime> _RespondedOn;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComplaintIDChanging(int value);
    partial void OnComplaintIDChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnComplaintTypeChanging(string value);
    partial void OnComplaintTypeChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnHandledByChanging(System.Nullable<int> value);
    partial void OnHandledByChanged();
    partial void OnResponseChanging(string value);
    partial void OnResponseChanged();
    partial void OnRespondedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnRespondedOnChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblComplaint()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ComplaintID
		{
			get
			{
				return this._ComplaintID;
			}
			set
			{
				if ((this._ComplaintID != value))
				{
					this.OnComplaintIDChanging(value);
					this.SendPropertyChanging();
					this._ComplaintID = value;
					this.SendPropertyChanged("ComplaintID");
					this.OnComplaintIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ComplaintType
		{
			get
			{
				return this._ComplaintType;
			}
			set
			{
				if ((this._ComplaintType != value))
				{
					this.OnComplaintTypeChanging(value);
					this.SendPropertyChanging();
					this._ComplaintType = value;
					this.SendPropertyChanged("ComplaintType");
					this.OnComplaintTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandledBy", DbType="Int")]
		public System.Nullable<int> HandledBy
		{
			get
			{
				return this._HandledBy;
			}
			set
			{
				if ((this._HandledBy != value))
				{
					this.OnHandledByChanging(value);
					this.SendPropertyChanging();
					this._HandledBy = value;
					this.SendPropertyChanged("HandledBy");
					this.OnHandledByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Response", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Response
		{
			get
			{
				return this._Response;
			}
			set
			{
				if ((this._Response != value))
				{
					this.OnResponseChanging(value);
					this.SendPropertyChanging();
					this._Response = value;
					this.SendPropertyChanged("Response");
					this.OnResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RespondedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> RespondedOn
		{
			get
			{
				return this._RespondedOn;
			}
			set
			{
				if ((this._RespondedOn != value))
				{
					this.OnRespondedOnChanging(value);
					this.SendPropertyChanging();
					this._RespondedOn = value;
					this.SendPropertyChanged("RespondedOn");
					this.OnRespondedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDocumentType")]
	public partial class tblDocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentTypeID;
		
		private string _DocumentTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentTypeIDChanging(int value);
    partial void OnDocumentTypeIDChanged();
    partial void OnDocumentTypeNameChanging(string value);
    partial void OnDocumentTypeNameChanged();
    #endregion
		
		public tblDocumentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					this.OnDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeID = value;
					this.SendPropertyChanged("DocumentTypeID");
					this.OnDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentTypeName
		{
			get
			{
				return this._DocumentTypeName;
			}
			set
			{
				if ((this._DocumentTypeName != value))
				{
					this.OnDocumentTypeNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeName = value;
					this.SendPropertyChanged("DocumentTypeName");
					this.OnDocumentTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEvent")]
	public partial class tblEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private string _EventName;
		
		private int _EventTypeID;
		
		private string _Venue;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Subject;
		
		private string _Description;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<int> _CreatedBy;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnEventTypeIDChanging(int value);
    partial void OnEventTypeIDChanged();
    partial void OnVenueChanging(string value);
    partial void OnVenueChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTypeID", DbType="Int NOT NULL")]
		public int EventTypeID
		{
			get
			{
				return this._EventTypeID;
			}
			set
			{
				if ((this._EventTypeID != value))
				{
					this.OnEventTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EventTypeID = value;
					this.SendPropertyChanged("EventTypeID");
					this.OnEventTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Venue", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Venue
		{
			get
			{
				return this._Venue;
			}
			set
			{
				if ((this._Venue != value))
				{
					this.OnVenueChanging(value);
					this.SendPropertyChanging();
					this._Venue = value;
					this.SendPropertyChanged("Venue");
					this.OnVenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEventType")]
	public partial class tblEventType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventTypeID;
		
		private string _EventTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventTypeIDChanging(int value);
    partial void OnEventTypeIDChanged();
    partial void OnEventTypeNameChanging(string value);
    partial void OnEventTypeNameChanged();
    #endregion
		
		public tblEventType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EventTypeID
		{
			get
			{
				return this._EventTypeID;
			}
			set
			{
				if ((this._EventTypeID != value))
				{
					this.OnEventTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EventTypeID = value;
					this.SendPropertyChanged("EventTypeID");
					this.OnEventTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EventTypeName
		{
			get
			{
				return this._EventTypeName;
			}
			set
			{
				if ((this._EventTypeName != value))
				{
					this.OnEventTypeNameChanging(value);
					this.SendPropertyChanging();
					this._EventTypeName = value;
					this.SendPropertyChanged("EventTypeName");
					this.OnEventTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblExpenses")]
	public partial class tblExpense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExpenseID;
		
		private string _ExpenseName;
		
		private string _ExpenseType;
		
		private string _Description;
		
		private bool _IsDeleted;
		
		private System.Nullable<decimal> _Amount;
		
		private string _PaymentMode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpenseIDChanging(int value);
    partial void OnExpenseIDChanged();
    partial void OnExpenseNameChanging(string value);
    partial void OnExpenseNameChanged();
    partial void OnExpenseTypeChanging(string value);
    partial void OnExpenseTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnPaymentModeChanging(string value);
    partial void OnPaymentModeChanged();
    #endregion
		
		public tblExpense()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExpenseID
		{
			get
			{
				return this._ExpenseID;
			}
			set
			{
				if ((this._ExpenseID != value))
				{
					this.OnExpenseIDChanging(value);
					this.SendPropertyChanging();
					this._ExpenseID = value;
					this.SendPropertyChanged("ExpenseID");
					this.OnExpenseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ExpenseName
		{
			get
			{
				return this._ExpenseName;
			}
			set
			{
				if ((this._ExpenseName != value))
				{
					this.OnExpenseNameChanging(value);
					this.SendPropertyChanging();
					this._ExpenseName = value;
					this.SendPropertyChanged("ExpenseName");
					this.OnExpenseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ExpenseType
		{
			get
			{
				return this._ExpenseType;
			}
			set
			{
				if ((this._ExpenseType != value))
				{
					this.OnExpenseTypeChanging(value);
					this.SendPropertyChanging();
					this._ExpenseType = value;
					this.SendPropertyChanged("ExpenseType");
					this.OnExpenseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMode", DbType="VarChar(50)")]
		public string PaymentMode
		{
			get
			{
				return this._PaymentMode;
			}
			set
			{
				if ((this._PaymentMode != value))
				{
					this.OnPaymentModeChanging(value);
					this.SendPropertyChanging();
					this._PaymentMode = value;
					this.SendPropertyChanged("PaymentMode");
					this.OnPaymentModeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFacilities")]
	public partial class tblFacility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FacilityID;
		
		private string _FacilityName;
		
		private int _RatePerHour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacilityIDChanging(int value);
    partial void OnFacilityIDChanged();
    partial void OnFacilityNameChanging(string value);
    partial void OnFacilityNameChanged();
    partial void OnRatePerHourChanging(int value);
    partial void OnRatePerHourChanged();
    #endregion
		
		public tblFacility()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FacilityID
		{
			get
			{
				return this._FacilityID;
			}
			set
			{
				if ((this._FacilityID != value))
				{
					this.OnFacilityIDChanging(value);
					this.SendPropertyChanging();
					this._FacilityID = value;
					this.SendPropertyChanged("FacilityID");
					this.OnFacilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this.OnFacilityNameChanging(value);
					this.SendPropertyChanging();
					this._FacilityName = value;
					this.SendPropertyChanged("FacilityName");
					this.OnFacilityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerHour", DbType="Int NOT NULL")]
		public int RatePerHour
		{
			get
			{
				return this._RatePerHour;
			}
			set
			{
				if ((this._RatePerHour != value))
				{
					this.OnRatePerHourChanging(value);
					this.SendPropertyChanging();
					this._RatePerHour = value;
					this.SendPropertyChanged("RatePerHour");
					this.OnRatePerHourChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFlat")]
	public partial class tblFlat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FlatNo;
		
		private bool _OnRent;
		
		private string _TenamentNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnOnRentChanging(bool value);
    partial void OnOnRentChanged();
    partial void OnTenamentNoChanging(string value);
    partial void OnTenamentNoChanged();
    #endregion
		
		public tblFlat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnRent", DbType="Bit NOT NULL")]
		public bool OnRent
		{
			get
			{
				return this._OnRent;
			}
			set
			{
				if ((this._OnRent != value))
				{
					this.OnOnRentChanging(value);
					this.SendPropertyChanging();
					this._OnRent = value;
					this.SendPropertyChanged("OnRent");
					this.OnOnRentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenamentNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TenamentNo
		{
			get
			{
				return this._TenamentNo;
			}
			set
			{
				if ((this._TenamentNo != value))
				{
					this.OnTenamentNoChanging(value);
					this.SendPropertyChanging();
					this._TenamentNo = value;
					this.SendPropertyChanged("TenamentNo");
					this.OnTenamentNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFlatHolder")]
	public partial class tblFlatHolder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FlatHolderID;
		
		private string _FlatNo;
		
		private int _ResidentID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlatHolderIDChanging(int value);
    partial void OnFlatHolderIDChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnResidentIDChanging(int value);
    partial void OnResidentIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblFlatHolder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatHolderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FlatHolderID
		{
			get
			{
				return this._FlatHolderID;
			}
			set
			{
				if ((this._FlatHolderID != value))
				{
					this.OnFlatHolderIDChanging(value);
					this.SendPropertyChanging();
					this._FlatHolderID = value;
					this.SendPropertyChanged("FlatHolderID");
					this.OnFlatHolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentID", DbType="Int NOT NULL")]
		public int ResidentID
		{
			get
			{
				return this._ResidentID;
			}
			set
			{
				if ((this._ResidentID != value))
				{
					this.OnResidentIDChanging(value);
					this.SendPropertyChanging();
					this._ResidentID = value;
					this.SendPropertyChanged("ResidentID");
					this.OnResidentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblImages")]
	public partial class tblImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImageID;
		
		private string _ImageCaption;
		
		private string _Path;
		
		private int _AlbumID;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedOn;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnImageCaptionChanging(string value);
    partial void OnImageCaptionChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblImage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageCaption", DbType="VarChar(100)")]
		public string ImageCaption
		{
			get
			{
				return this._ImageCaption;
			}
			set
			{
				if ((this._ImageCaption != value))
				{
					this.OnImageCaptionChanging(value);
					this.SendPropertyChanging();
					this._ImageCaption = value;
					this.SendPropertyChanged("ImageCaption");
					this.OnImageCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL")]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblIncome")]
	public partial class tblIncome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IncomeID;
		
		private string _IncomeName;
		
		private string _IncomeType;
		
		private string _Description;
		
		private bool _IsDeleted;
		
		private System.Nullable<decimal> _Amount;
		
		private string _PaymentMode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIncomeIDChanging(int value);
    partial void OnIncomeIDChanged();
    partial void OnIncomeNameChanging(string value);
    partial void OnIncomeNameChanged();
    partial void OnIncomeTypeChanging(string value);
    partial void OnIncomeTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnPaymentModeChanging(string value);
    partial void OnPaymentModeChanged();
    #endregion
		
		public tblIncome()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IncomeID
		{
			get
			{
				return this._IncomeID;
			}
			set
			{
				if ((this._IncomeID != value))
				{
					this.OnIncomeIDChanging(value);
					this.SendPropertyChanging();
					this._IncomeID = value;
					this.SendPropertyChanged("IncomeID");
					this.OnIncomeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string IncomeName
		{
			get
			{
				return this._IncomeName;
			}
			set
			{
				if ((this._IncomeName != value))
				{
					this.OnIncomeNameChanging(value);
					this.SendPropertyChanging();
					this._IncomeName = value;
					this.SendPropertyChanged("IncomeName");
					this.OnIncomeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string IncomeType
		{
			get
			{
				return this._IncomeType;
			}
			set
			{
				if ((this._IncomeType != value))
				{
					this.OnIncomeTypeChanging(value);
					this.SendPropertyChanging();
					this._IncomeType = value;
					this.SendPropertyChanged("IncomeType");
					this.OnIncomeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMode", DbType="VarChar(50)")]
		public string PaymentMode
		{
			get
			{
				return this._PaymentMode;
			}
			set
			{
				if ((this._PaymentMode != value))
				{
					this.OnPaymentModeChanging(value);
					this.SendPropertyChanging();
					this._PaymentMode = value;
					this.SendPropertyChanged("PaymentMode");
					this.OnPaymentModeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLogin")]
	public partial class tblLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginID;
		
		private string _LoginName;
		
		private string _PhoneNo;
		
		private string _Email;
		
		private string _Password;
		
		private string _VerificationCode;
		
		private string _FlatNo;
		
		private System.Nullable<int> _MemberID;
		
		private string _MemberType;
		
		private bool _IsBlocked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIDChanging(int value);
    partial void OnLoginIDChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnVerificationCodeChanging(string value);
    partial void OnVerificationCodeChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnMemberIDChanging(System.Nullable<int> value);
    partial void OnMemberIDChanged();
    partial void OnMemberTypeChanging(string value);
    partial void OnMemberTypeChanged();
    partial void OnIsBlockedChanging(bool value);
    partial void OnIsBlockedChanged();
    #endregion
		
		public tblLogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationCode", DbType="VarChar(10)")]
		public string VerificationCode
		{
			get
			{
				return this._VerificationCode;
			}
			set
			{
				if ((this._VerificationCode != value))
				{
					this.OnVerificationCodeChanging(value);
					this.SendPropertyChanging();
					this._VerificationCode = value;
					this.SendPropertyChanged("VerificationCode");
					this.OnVerificationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50)")]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MemberType
		{
			get
			{
				return this._MemberType;
			}
			set
			{
				if ((this._MemberType != value))
				{
					this.OnMemberTypeChanging(value);
					this.SendPropertyChanging();
					this._MemberType = value;
					this.SendPropertyChanged("MemberType");
					this.OnMemberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlocked", DbType="Bit NOT NULL")]
		public bool IsBlocked
		{
			get
			{
				return this._IsBlocked;
			}
			set
			{
				if ((this._IsBlocked != value))
				{
					this.OnIsBlockedChanging(value);
					this.SendPropertyChanging();
					this._IsBlocked = value;
					this.SendPropertyChanged("IsBlocked");
					this.OnIsBlockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMaintenance")]
	public partial class tblMaintenance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaintenanceID;
		
		private string _FlatNo;
		
		private string _PaymentMode;
		
		private string _ChequeNo;
		
		private System.DateTime _PaymentOn;
		
		private decimal _Amount;
		
		private decimal _Penalty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaintenanceIDChanging(int value);
    partial void OnMaintenanceIDChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnPaymentModeChanging(string value);
    partial void OnPaymentModeChanged();
    partial void OnChequeNoChanging(string value);
    partial void OnChequeNoChanged();
    partial void OnPaymentOnChanging(System.DateTime value);
    partial void OnPaymentOnChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPenaltyChanging(decimal value);
    partial void OnPenaltyChanged();
    #endregion
		
		public tblMaintenance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenanceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaintenanceID
		{
			get
			{
				return this._MaintenanceID;
			}
			set
			{
				if ((this._MaintenanceID != value))
				{
					this.OnMaintenanceIDChanging(value);
					this.SendPropertyChanging();
					this._MaintenanceID = value;
					this.SendPropertyChanged("MaintenanceID");
					this.OnMaintenanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PaymentMode
		{
			get
			{
				return this._PaymentMode;
			}
			set
			{
				if ((this._PaymentMode != value))
				{
					this.OnPaymentModeChanging(value);
					this.SendPropertyChanging();
					this._PaymentMode = value;
					this.SendPropertyChanged("PaymentMode");
					this.OnPaymentModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNo", DbType="VarChar(20)")]
		public string ChequeNo
		{
			get
			{
				return this._ChequeNo;
			}
			set
			{
				if ((this._ChequeNo != value))
				{
					this.OnChequeNoChanging(value);
					this.SendPropertyChanging();
					this._ChequeNo = value;
					this.SendPropertyChanged("ChequeNo");
					this.OnChequeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentOn", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentOn
		{
			get
			{
				return this._PaymentOn;
			}
			set
			{
				if ((this._PaymentOn != value))
				{
					this.OnPaymentOnChanging(value);
					this.SendPropertyChanging();
					this._PaymentOn = value;
					this.SendPropertyChanged("PaymentOn");
					this.OnPaymentOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Penalty", DbType="Decimal(18,0) NOT NULL")]
		public decimal Penalty
		{
			get
			{
				return this._Penalty;
			}
			set
			{
				if ((this._Penalty != value))
				{
					this.OnPenaltyChanging(value);
					this.SendPropertyChanging();
					this._Penalty = value;
					this.SendPropertyChanged("Penalty");
					this.OnPenaltyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNotices")]
	public partial class tblNotice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NoticeID;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<int> _Priority;
		
		private System.DateTime _CreatedOn;
		
		private int _CreatedBy;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoticeIDChanging(int value);
    partial void OnNoticeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblNotice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NoticeID
		{
			get
			{
				return this._NoticeID;
			}
			set
			{
				if ((this._NoticeID != value))
				{
					this.OnNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._NoticeID = value;
					this.SendPropertyChanged("NoticeID");
					this.OnNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNoticeTemplate")]
	public partial class tblNoticeTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TemplateID;
		
		private string _TemplateName;
		
		private string _Text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemplateIDChanging(int value);
    partial void OnTemplateIDChanged();
    partial void OnTemplateNameChanging(string value);
    partial void OnTemplateNameChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public tblNoticeTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TemplateID
		{
			get
			{
				return this._TemplateID;
			}
			set
			{
				if ((this._TemplateID != value))
				{
					this.OnTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._TemplateID = value;
					this.SendPropertyChanged("TemplateID");
					this.OnTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TemplateName
		{
			get
			{
				return this._TemplateName;
			}
			set
			{
				if ((this._TemplateName != value))
				{
					this.OnTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._TemplateName = value;
					this.SendPropertyChanged("TemplateName");
					this.OnTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOwnerDocuments")]
	public partial class tblOwnerDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentID;
		
		private string _FlatNo;
		
		private int _DocumentTypeID;
		
		private string _FileType;
		
		private System.Nullable<int> _ApprovedBy;
		
		private string _Filepath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIDChanging(int value);
    partial void OnDocumentIDChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnDocumentTypeIDChanging(int value);
    partial void OnDocumentTypeIDChanged();
    partial void OnFileTypeChanging(string value);
    partial void OnFileTypeChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnFilepathChanging(string value);
    partial void OnFilepathChanged();
    #endregion
		
		public tblOwnerDocument()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeID", DbType="Int NOT NULL")]
		public int DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					this.OnDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeID = value;
					this.SendPropertyChanged("DocumentTypeID");
					this.OnDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filepath", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Filepath
		{
			get
			{
				return this._Filepath;
			}
			set
			{
				if ((this._Filepath != value))
				{
					this.OnFilepathChanging(value);
					this.SendPropertyChanging();
					this._Filepath = value;
					this.SendPropertyChanged("Filepath");
					this.OnFilepathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPollOptions")]
	public partial class tblPollOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollOptionID;
		
		private string _PollOptionName;
		
		private int _PollID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollOptionIDChanging(int value);
    partial void OnPollOptionIDChanged();
    partial void OnPollOptionNameChanging(string value);
    partial void OnPollOptionNameChanged();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    #endregion
		
		public tblPollOption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollOptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PollOptionID
		{
			get
			{
				return this._PollOptionID;
			}
			set
			{
				if ((this._PollOptionID != value))
				{
					this.OnPollOptionIDChanging(value);
					this.SendPropertyChanging();
					this._PollOptionID = value;
					this.SendPropertyChanged("PollOptionID");
					this.OnPollOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollOptionName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string PollOptionName
		{
			get
			{
				return this._PollOptionName;
			}
			set
			{
				if ((this._PollOptionName != value))
				{
					this.OnPollOptionNameChanging(value);
					this.SendPropertyChanging();
					this._PollOptionName = value;
					this.SendPropertyChanged("PollOptionName");
					this.OnPollOptionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL")]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPolls")]
	public partial class tblPoll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollID;
		
		private string _PollTitle;
		
		private System.Nullable<int> _PollType;
		
		private System.DateTime _CreatedOn;
		
		private int _CreatedBy;
		
		private System.DateTime _EndTime;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnPollTitleChanging(string value);
    partial void OnPollTitleChanged();
    partial void OnPollTypeChanging(System.Nullable<int> value);
    partial void OnPollTypeChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblPoll()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollTitle", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PollTitle
		{
			get
			{
				return this._PollTitle;
			}
			set
			{
				if ((this._PollTitle != value))
				{
					this.OnPollTitleChanging(value);
					this.SendPropertyChanging();
					this._PollTitle = value;
					this.SendPropertyChanged("PollTitle");
					this.OnPollTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollType", DbType="Int")]
		public System.Nullable<int> PollType
		{
			get
			{
				return this._PollType;
			}
			set
			{
				if ((this._PollType != value))
				{
					this.OnPollTypeChanging(value);
					this.SendPropertyChanging();
					this._PollType = value;
					this.SendPropertyChanged("PollType");
					this.OnPollTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPollVoting")]
	public partial class tblPollVoting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollVotingID;
		
		private string _FlatNo;
		
		private int _PollOptionID;
		
		private int _PollID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollVotingIDChanging(int value);
    partial void OnPollVotingIDChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnPollOptionIDChanging(int value);
    partial void OnPollOptionIDChanged();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    #endregion
		
		public tblPollVoting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollVotingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PollVotingID
		{
			get
			{
				return this._PollVotingID;
			}
			set
			{
				if ((this._PollVotingID != value))
				{
					this.OnPollVotingIDChanging(value);
					this.SendPropertyChanging();
					this._PollVotingID = value;
					this.SendPropertyChanged("PollVotingID");
					this.OnPollVotingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollOptionID", DbType="Int NOT NULL")]
		public int PollOptionID
		{
			get
			{
				return this._PollOptionID;
			}
			set
			{
				if ((this._PollOptionID != value))
				{
					this.OnPollOptionIDChanging(value);
					this.SendPropertyChanging();
					this._PollOptionID = value;
					this.SendPropertyChanged("PollOptionID");
					this.OnPollOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL")]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPosition")]
	public partial class tblPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PositionID;
		
		private string _PositionName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPositionIDChanging(int value);
    partial void OnPositionIDChanged();
    partial void OnPositionNameChanging(string value);
    partial void OnPositionNameChanged();
    #endregion
		
		public tblPosition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PositionName
		{
			get
			{
				return this._PositionName;
			}
			set
			{
				if ((this._PositionName != value))
				{
					this.OnPositionNameChanging(value);
					this.SendPropertyChanging();
					this._PositionName = value;
					this.SendPropertyChanged("PositionName");
					this.OnPositionNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRent")]
	public partial class tblRent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RentID;
		
		private string _FlatNo;
		
		private int _ResidentID;
		
		private int _RentAmount;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRentIDChanging(int value);
    partial void OnRentIDChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnResidentIDChanging(int value);
    partial void OnResidentIDChanged();
    partial void OnRentAmountChanging(int value);
    partial void OnRentAmountChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblRent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RentID
		{
			get
			{
				return this._RentID;
			}
			set
			{
				if ((this._RentID != value))
				{
					this.OnRentIDChanging(value);
					this.SendPropertyChanging();
					this._RentID = value;
					this.SendPropertyChanged("RentID");
					this.OnRentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentID", DbType="Int NOT NULL")]
		public int ResidentID
		{
			get
			{
				return this._ResidentID;
			}
			set
			{
				if ((this._ResidentID != value))
				{
					this.OnResidentIDChanging(value);
					this.SendPropertyChanging();
					this._ResidentID = value;
					this.SendPropertyChanged("ResidentID");
					this.OnResidentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentAmount", DbType="Int NOT NULL")]
		public int RentAmount
		{
			get
			{
				return this._RentAmount;
			}
			set
			{
				if ((this._RentAmount != value))
				{
					this.OnRentAmountChanging(value);
					this.SendPropertyChanging();
					this._RentAmount = value;
					this.SendPropertyChanged("RentAmount");
					this.OnRentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblResidents")]
	public partial class tblResident : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResidentID;
		
		private string _ResidentName;
		
		private System.DateTime _DOB;
		
		private string _FlatNo;
		
		private string _Occupation;
		
		private string _ContactNo1;
		
		private string _ContactNo2;
		
		private string _Email;
		
		private string _Image;
		
		private System.Nullable<int> _PositionID;
		
		private System.Nullable<int> _FlatHolderID;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedOn;
		
		private string _Gender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResidentIDChanging(int value);
    partial void OnResidentIDChanged();
    partial void OnResidentNameChanging(string value);
    partial void OnResidentNameChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnContactNo1Changing(string value);
    partial void OnContactNo1Changed();
    partial void OnContactNo2Changing(string value);
    partial void OnContactNo2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnPositionIDChanging(System.Nullable<int> value);
    partial void OnPositionIDChanged();
    partial void OnFlatHolderIDChanging(System.Nullable<int> value);
    partial void OnFlatHolderIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    #endregion
		
		public tblResident()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResidentID
		{
			get
			{
				return this._ResidentID;
			}
			set
			{
				if ((this._ResidentID != value))
				{
					this.OnResidentIDChanging(value);
					this.SendPropertyChanging();
					this._ResidentID = value;
					this.SendPropertyChanged("ResidentID");
					this.OnResidentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ResidentName
		{
			get
			{
				return this._ResidentName;
			}
			set
			{
				if ((this._ResidentName != value))
				{
					this.OnResidentNameChanging(value);
					this.SendPropertyChanging();
					this._ResidentName = value;
					this.SendPropertyChanged("ResidentName");
					this.OnResidentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo1", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ContactNo1
		{
			get
			{
				return this._ContactNo1;
			}
			set
			{
				if ((this._ContactNo1 != value))
				{
					this.OnContactNo1Changing(value);
					this.SendPropertyChanging();
					this._ContactNo1 = value;
					this.SendPropertyChanged("ContactNo1");
					this.OnContactNo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo2", DbType="VarChar(15)")]
		public string ContactNo2
		{
			get
			{
				return this._ContactNo2;
			}
			set
			{
				if ((this._ContactNo2 != value))
				{
					this.OnContactNo2Changing(value);
					this.SendPropertyChanging();
					this._ContactNo2 = value;
					this.SendPropertyChanged("ContactNo2");
					this.OnContactNo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(255)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="Int")]
		public System.Nullable<int> PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatHolderID", DbType="Int")]
		public System.Nullable<int> FlatHolderID
		{
			get
			{
				return this._FlatHolderID;
			}
			set
			{
				if ((this._FlatHolderID != value))
				{
					this.OnFlatHolderIDChanging(value);
					this.SendPropertyChanging();
					this._FlatHolderID = value;
					this.SendPropertyChanged("FlatHolderID");
					this.OnFlatHolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Date NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSociety")]
	public partial class tblSociety : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Address;
		
		private string _PostalCode;
		
		private string _LogoImage;
		
		private string _ContactNo;
		
		private string _PresidentName;
		
		private string _Builder;
		
		private string _Email;
		
		private string _Fax;
		
		private string _RegistrationNo;
		
		private string _CampusArea;
		
		private string _SocietyType;
		
		private string _LatLong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnLogoImageChanging(string value);
    partial void OnLogoImageChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnPresidentNameChanging(string value);
    partial void OnPresidentNameChanged();
    partial void OnBuilderChanging(string value);
    partial void OnBuilderChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnRegistrationNoChanging(string value);
    partial void OnRegistrationNoChanged();
    partial void OnCampusAreaChanging(string value);
    partial void OnCampusAreaChanged();
    partial void OnSocietyTypeChanging(string value);
    partial void OnSocietyTypeChanged();
    partial void OnLatLongChanging(string value);
    partial void OnLatLongChanged();
    #endregion
		
		public tblSociety()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoImage", DbType="VarChar(255)")]
		public string LogoImage
		{
			get
			{
				return this._LogoImage;
			}
			set
			{
				if ((this._LogoImage != value))
				{
					this.OnLogoImageChanging(value);
					this.SendPropertyChanging();
					this._LogoImage = value;
					this.SendPropertyChanged("LogoImage");
					this.OnLogoImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresidentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PresidentName
		{
			get
			{
				return this._PresidentName;
			}
			set
			{
				if ((this._PresidentName != value))
				{
					this.OnPresidentNameChanging(value);
					this.SendPropertyChanging();
					this._PresidentName = value;
					this.SendPropertyChanged("PresidentName");
					this.OnPresidentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Builder", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Builder
		{
			get
			{
				return this._Builder;
			}
			set
			{
				if ((this._Builder != value))
				{
					this.OnBuilderChanging(value);
					this.SendPropertyChanging();
					this._Builder = value;
					this.SendPropertyChanged("Builder");
					this.OnBuilderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string RegistrationNo
		{
			get
			{
				return this._RegistrationNo;
			}
			set
			{
				if ((this._RegistrationNo != value))
				{
					this.OnRegistrationNoChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNo = value;
					this.SendPropertyChanged("RegistrationNo");
					this.OnRegistrationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampusArea", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CampusArea
		{
			get
			{
				return this._CampusArea;
			}
			set
			{
				if ((this._CampusArea != value))
				{
					this.OnCampusAreaChanging(value);
					this.SendPropertyChanging();
					this._CampusArea = value;
					this.SendPropertyChanged("CampusArea");
					this.OnCampusAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocietyType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SocietyType
		{
			get
			{
				return this._SocietyType;
			}
			set
			{
				if ((this._SocietyType != value))
				{
					this.OnSocietyTypeChanging(value);
					this.SendPropertyChanging();
					this._SocietyType = value;
					this.SendPropertyChanged("SocietyType");
					this.OnSocietyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatLong", DbType="VarChar(50)")]
		public string LatLong
		{
			get
			{
				return this._LatLong;
			}
			set
			{
				if ((this._LatLong != value))
				{
					this.OnLatLongChanging(value);
					this.SendPropertyChanging();
					this._LatLong = value;
					this.SendPropertyChanged("LatLong");
					this.OnLatLongChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStaffMembers")]
	public partial class tblStaffMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private string _MemberName;
		
		private string _MemberType;
		
		private System.DateTime _DOB;
		
		private string _ContactNo1;
		
		private string _ContactNo2;
		
		private string _Image;
		
		private string _IDProofDoc;
		
		private string _Address;
		
		private System.DateTime _DOJ;
		
		private System.Nullable<System.DateTime> _DOL;
		
		private System.Nullable<int> _CreatedBy;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnMemberNameChanging(string value);
    partial void OnMemberNameChanged();
    partial void OnMemberTypeChanging(string value);
    partial void OnMemberTypeChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnContactNo1Changing(string value);
    partial void OnContactNo1Changed();
    partial void OnContactNo2Changing(string value);
    partial void OnContactNo2Changed();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnIDProofDocChanging(string value);
    partial void OnIDProofDocChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDOJChanging(System.DateTime value);
    partial void OnDOJChanged();
    partial void OnDOLChanging(System.Nullable<System.DateTime> value);
    partial void OnDOLChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblStaffMember()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this.OnMemberNameChanging(value);
					this.SendPropertyChanging();
					this._MemberName = value;
					this.SendPropertyChanged("MemberName");
					this.OnMemberNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MemberType
		{
			get
			{
				return this._MemberType;
			}
			set
			{
				if ((this._MemberType != value))
				{
					this.OnMemberTypeChanging(value);
					this.SendPropertyChanging();
					this._MemberType = value;
					this.SendPropertyChanged("MemberType");
					this.OnMemberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo1", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ContactNo1
		{
			get
			{
				return this._ContactNo1;
			}
			set
			{
				if ((this._ContactNo1 != value))
				{
					this.OnContactNo1Changing(value);
					this.SendPropertyChanging();
					this._ContactNo1 = value;
					this.SendPropertyChanged("ContactNo1");
					this.OnContactNo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo2", DbType="VarChar(15)")]
		public string ContactNo2
		{
			get
			{
				return this._ContactNo2;
			}
			set
			{
				if ((this._ContactNo2 != value))
				{
					this.OnContactNo2Changing(value);
					this.SendPropertyChanging();
					this._ContactNo2 = value;
					this.SendPropertyChanged("ContactNo2");
					this.OnContactNo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(255)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProofDoc", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string IDProofDoc
		{
			get
			{
				return this._IDProofDoc;
			}
			set
			{
				if ((this._IDProofDoc != value))
				{
					this.OnIDProofDocChanging(value);
					this.SendPropertyChanging();
					this._IDProofDoc = value;
					this.SendPropertyChanged("IDProofDoc");
					this.OnIDProofDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOJ", DbType="Date NOT NULL")]
		public System.DateTime DOJ
		{
			get
			{
				return this._DOJ;
			}
			set
			{
				if ((this._DOJ != value))
				{
					this.OnDOJChanging(value);
					this.SendPropertyChanging();
					this._DOJ = value;
					this.SendPropertyChanged("DOJ");
					this.OnDOJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOL", DbType="Date")]
		public System.Nullable<System.DateTime> DOL
		{
			get
			{
				return this._DOL;
			}
			set
			{
				if ((this._DOL != value))
				{
					this.OnDOLChanging(value);
					this.SendPropertyChanging();
					this._DOL = value;
					this.SendPropertyChanged("DOL");
					this.OnDOLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTransactions")]
	public partial class tblTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionID;
		
		private string _TransactionType;
		
		private decimal _Amount;
		
		private string _PaymentMode;
		
		private string _ChequeNo;
		
		private System.DateTime _TransactionOn;
		
		private System.Nullable<int> _PaymentID;
		
		private string _FlatNo;
		
		private System.Nullable<decimal> _Penalty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPaymentModeChanging(string value);
    partial void OnPaymentModeChanged();
    partial void OnChequeNoChanging(string value);
    partial void OnChequeNoChanged();
    partial void OnTransactionOnChanging(System.DateTime value);
    partial void OnTransactionOnChanged();
    partial void OnPaymentIDChanging(System.Nullable<int> value);
    partial void OnPaymentIDChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnPenaltyChanging(System.Nullable<decimal> value);
    partial void OnPenaltyChanged();
    #endregion
		
		public tblTransaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PaymentMode
		{
			get
			{
				return this._PaymentMode;
			}
			set
			{
				if ((this._PaymentMode != value))
				{
					this.OnPaymentModeChanging(value);
					this.SendPropertyChanging();
					this._PaymentMode = value;
					this.SendPropertyChanged("PaymentMode");
					this.OnPaymentModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNo", DbType="VarChar(50)")]
		public string ChequeNo
		{
			get
			{
				return this._ChequeNo;
			}
			set
			{
				if ((this._ChequeNo != value))
				{
					this.OnChequeNoChanging(value);
					this.SendPropertyChanging();
					this._ChequeNo = value;
					this.SendPropertyChanged("ChequeNo");
					this.OnChequeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionOn", DbType="DateTime NOT NULL")]
		public System.DateTime TransactionOn
		{
			get
			{
				return this._TransactionOn;
			}
			set
			{
				if ((this._TransactionOn != value))
				{
					this.OnTransactionOnChanging(value);
					this.SendPropertyChanging();
					this._TransactionOn = value;
					this.SendPropertyChanged("TransactionOn");
					this.OnTransactionOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="Int")]
		public System.Nullable<int> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50)")]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Penalty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Penalty
		{
			get
			{
				return this._Penalty;
			}
			set
			{
				if ((this._Penalty != value))
				{
					this.OnPenaltyChanging(value);
					this.SendPropertyChanging();
					this._Penalty = value;
					this.SendPropertyChanged("Penalty");
					this.OnPenaltyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblVendors")]
	public partial class tblVendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VendorID;
		
		private string _VendorName;
		
		private string _Address;
		
		private string _Location;
		
		private System.Nullable<decimal> _Ratings;
		
		private System.Nullable<int> _RatingsNum;
		
		private bool _IsActive;
		
		private string _VendorType;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorIDChanging(int value);
    partial void OnVendorIDChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnRatingsChanging(System.Nullable<decimal> value);
    partial void OnRatingsChanged();
    partial void OnRatingsNumChanging(System.Nullable<int> value);
    partial void OnRatingsNumChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnVendorTypeChanging(string value);
    partial void OnVendorTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblVendor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VendorID
		{
			get
			{
				return this._VendorID;
			}
			set
			{
				if ((this._VendorID != value))
				{
					this.OnVendorIDChanging(value);
					this.SendPropertyChanging();
					this._VendorID = value;
					this.SendPropertyChanged("VendorID");
					this.OnVendorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(25)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ratings", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Ratings
		{
			get
			{
				return this._Ratings;
			}
			set
			{
				if ((this._Ratings != value))
				{
					this.OnRatingsChanging(value);
					this.SendPropertyChanging();
					this._Ratings = value;
					this.SendPropertyChanged("Ratings");
					this.OnRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingsNum", DbType="Int")]
		public System.Nullable<int> RatingsNum
		{
			get
			{
				return this._RatingsNum;
			}
			set
			{
				if ((this._RatingsNum != value))
				{
					this.OnRatingsNumChanging(value);
					this.SendPropertyChanging();
					this._RatingsNum = value;
					this.SendPropertyChanged("RatingsNum");
					this.OnRatingsNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorType", DbType="VarChar(50)")]
		public string VendorType
		{
			get
			{
				return this._VendorType;
			}
			set
			{
				if ((this._VendorType != value))
				{
					this.OnVendorTypeChanging(value);
					this.SendPropertyChanging();
					this._VendorType = value;
					this.SendPropertyChanged("VendorType");
					this.OnVendorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblVisitors")]
	public partial class tblVisitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VisitorID;
		
		private string _VisitorName;
		
		private string _FlatNo;
		
		private System.DateTime _InTime;
		
		private System.Nullable<System.DateTime> _OutTime;
		
		private string _Purpose;
		
		private string _VehicleNumber;
		
		private string _MobileNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitorIDChanging(int value);
    partial void OnVisitorIDChanged();
    partial void OnVisitorNameChanging(string value);
    partial void OnVisitorNameChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnInTimeChanging(System.DateTime value);
    partial void OnInTimeChanged();
    partial void OnOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOutTimeChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnVehicleNumberChanging(string value);
    partial void OnVehicleNumberChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    #endregion
		
		public tblVisitor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VisitorID
		{
			get
			{
				return this._VisitorID;
			}
			set
			{
				if ((this._VisitorID != value))
				{
					this.OnVisitorIDChanging(value);
					this.SendPropertyChanging();
					this._VisitorID = value;
					this.SendPropertyChanged("VisitorID");
					this.OnVisitorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string VisitorName
		{
			get
			{
				return this._VisitorName;
			}
			set
			{
				if ((this._VisitorName != value))
				{
					this.OnVisitorNameChanging(value);
					this.SendPropertyChanging();
					this._VisitorName = value;
					this.SendPropertyChanged("VisitorName");
					this.OnVisitorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTime", DbType="DateTime NOT NULL")]
		public System.DateTime InTime
		{
			get
			{
				return this._InTime;
			}
			set
			{
				if ((this._InTime != value))
				{
					this.OnInTimeChanging(value);
					this.SendPropertyChanging();
					this._InTime = value;
					this.SendPropertyChanged("InTime");
					this.OnInTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutTime
		{
			get
			{
				return this._OutTime;
			}
			set
			{
				if ((this._OutTime != value))
				{
					this.OnOutTimeChanging(value);
					this.SendPropertyChanging();
					this._OutTime = value;
					this.SendPropertyChanged("OutTime");
					this.OnOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleNumber", DbType="VarChar(20)")]
		public string VehicleNumber
		{
			get
			{
				return this._VehicleNumber;
			}
			set
			{
				if ((this._VehicleNumber != value))
				{
					this.OnVehicleNumberChanging(value);
					this.SendPropertyChanging();
					this._VehicleNumber = value;
					this.SendPropertyChanged("VehicleNumber");
					this.OnVehicleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ritesroq.tblNotifications")]
	public partial class tblNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationID;
		
		private string _Text;
		
		private string _Type;
		
		private string _FlatNo;
		
		private string _PageLink;
		
		private bool _IsSeen;
		
		private System.DateTime _CreatedOn;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationIDChanging(int value);
    partial void OnNotificationIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnFlatNoChanging(string value);
    partial void OnFlatNoChanged();
    partial void OnPageLinkChanging(string value);
    partial void OnPageLinkChanged();
    partial void OnIsSeenChanging(bool value);
    partial void OnIsSeenChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblNotification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NotificationID
		{
			get
			{
				return this._NotificationID;
			}
			set
			{
				if ((this._NotificationID != value))
				{
					this.OnNotificationIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationID = value;
					this.SendPropertyChanged("NotificationID");
					this.OnNotificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FlatNo
		{
			get
			{
				return this._FlatNo;
			}
			set
			{
				if ((this._FlatNo != value))
				{
					this.OnFlatNoChanging(value);
					this.SendPropertyChanging();
					this._FlatNo = value;
					this.SendPropertyChanged("FlatNo");
					this.OnFlatNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageLink", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PageLink
		{
			get
			{
				return this._PageLink;
			}
			set
			{
				if ((this._PageLink != value))
				{
					this.OnPageLinkChanging(value);
					this.SendPropertyChanging();
					this._PageLink = value;
					this.SendPropertyChanged("PageLink");
					this.OnPageLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSeen", DbType="Bit NOT NULL")]
		public bool IsSeen
		{
			get
			{
				return this._IsSeen;
			}
			set
			{
				if ((this._IsSeen != value))
				{
					this.OnIsSeenChanging(value);
					this.SendPropertyChanging();
					this._IsSeen = value;
					this.SendPropertyChanged("IsSeen");
					this.OnIsSeenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
